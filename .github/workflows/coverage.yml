name: Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build gcc-11 g++-11 lcov

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.25'

      - name: Configure CMake with Coverage
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_FLAGS="--coverage -fprofile-arcs -ftest-coverage" \
            -DCMAKE_C_FLAGS="--coverage -fprofile-arcs -ftest-coverage" \
            -DCMAKE_EXE_LINKER_FLAGS="--coverage" \
            -G Ninja
        env:
          CC: gcc-11
          CXX: g++-11

      - name: Build
        run: cmake --build build --parallel

      - name: Run Tests
        working-directory: build
        run: ./SlotMapTest --gtest_filter=-SlotMapTest.*_Slow

      - name: Generate Coverage Report
        run: |
          lcov --directory build --capture --output-file coverage.info
          echo "=== ALL captured coverage files ==="
          lcov --list coverage.info
          echo ""
          echo "=== Raw coverage.info contents (first 100 lines) ==="
          head -100 coverage.info
          echo ""
          echo "=== Searching for slot_map references in coverage.info ==="
          grep -i "slot_map" coverage.info || echo "No slot_map references found"
          echo ""
          echo "=== All .h files in coverage ==="
          grep "\.h" coverage.info || echo "No .h files found"
          echo ""
          echo "=== Extracting slot_map.h coverage ==="
          lcov --extract coverage.info '*/slot_map/slot_map.h' --output-file coverage_filtered.info
          lcov --list coverage_filtered.info
          echo ""
          echo "=== Coverage filtered file contents ==="
          cat coverage_filtered.info

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage_filtered.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          disable_search: true
          override_branch: ${{ github.ref_name }}
          override_build: ${{ github.run_number }}
          override_commit: ${{ github.sha }} 
